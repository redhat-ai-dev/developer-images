name: Validate Images

on:
  pull_request:
    branches: [ main ]

permissions: read-all

jobs:
  build:
    name: Validate Updated Images
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      with:
        fetch-depth: 0
    
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@a284dc1814e3fd07f2e34267fc8f81227ed29fb8 # v45.0.9
      with:
        dir_names: 'true'

    - name: Build Changed Images
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        BASE_DIR=$(pwd)
        for dir in ${ALL_CHANGED_FILES}; do
            echo "Change detected in $dir ..."
            prevdir=$(dirname $dir)
            if [ $prevdir == "model-servers/vllm" ]; then
                echo "Skipping validation of vllm model server changes! Please perform a manual validation ..."
                continue
            fi
            if [ $dir == "models/detr-resnet-101" ]; then
                echo "Skipping detr-resnet-101 due to size constraints. Please perform a manual validation ..."
                continue
            fi
            cd $dir
            if [ ! -f config.env ] && ([ -f Dockerfile ] || [ -f Containerfile ]); then
                echo "No config.env file present in changed directory that contains image files. Throwing error ..."
                exit 1
            elif [ ! -f config.env ]; then
                echo "No config.env file present in changed directory, skipping ..."
                cd $BASE_DIR
                continue
            fi
            echo "Running 'docker build' in $dir ..."
            if [ -f "Containerfile" ]; then
                docker build -f Containerfile .
            else
                docker build -f Dockerfile .
            fi
            cd $BASE_DIR
        done
    