name: Push Images

on:
  push:
    branches: [ main ]

permissions: read-all

jobs:
  build:
    name: Push Updated Images
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0
    
    - name: Login to Quay.io
      uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v47.0.0
      with:
        dir_names: 'true'

    - name: Push Changed Images
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        BASE_DIR=$(pwd)
        for dir in ${ALL_CHANGED_FILES}; do
            echo "Change detected in $dir ..."
            prevdir=$(dirname $dir)
            skip_model_server=false
            model_server_set=("model-servers/vllm" "model-servers/llamacpp_python")
            for model_server in "${model_server_set[@]}"; do
                if [[ "$prevdir" == *"$model_server"* ]]; then
                    echo "Skipping $dir due to size constraints. Please perform a manual upload ..."
                    skip_model_server=true
                    break
                fi
            done
            if [ "$skip_model_server" = true ]; then
                continue
            fi
            model_set=("models/detr-resnet-101" "models/granite-3.1-8b-instruct-gguf" "models/mistral-7b-instruct-v0.2")
            if printf "%s\n" "${model_set[@]}" | grep -q -x "$dir"; then
              echo "Skipping $dir due to size constraints. Please perform a manual upload ..."
              continue
            fi

            cd $dir
            if [ ! -f config.env ]; then
                echo "No config.env file present in changed directory, skipping ..."
                cd $BASE_DIR
                continue
            fi
            source config.env
            echo "Running 'docker build' in $dir ..."
            if [ -f "Containerfile" ]; then
                docker build -t "${IMAGE_NAME}":temp -f Containerfile .
            else
                docker build -t "${IMAGE_NAME}":temp -f Dockerfile .
            fi
            docker tag "${IMAGE_NAME}":temp "${IMAGE_NAME}":"${IMAGE_TAG}" && docker push "${IMAGE_NAME}":"${IMAGE_TAG}"
            docker tag "${IMAGE_NAME}":temp "${IMAGE_NAME}":"${GITHUB_SHA}" && docker push "${IMAGE_NAME}":"${GITHUB_SHA}"
            cd $BASE_DIR
        done

   